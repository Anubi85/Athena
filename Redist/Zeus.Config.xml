<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Zeus.Config</name>
    </assembly>
    <members>
        <member name="T:Zeus.Config.ConfigManager">
            <summary>
            Manages the application coniguration.
            </summary>
        </member>
        <member name="M:Zeus.Config.ConfigManager.#cctor">
            <summary>
            Allocate and initialize class resources.
            </summary>
        </member>
        <member name="F:Zeus.Config.ConfigManager.s_CfgMutex">
            <summary>
            The mutex used to syncronize parallel access to the settings file.
            </summary>
        </member>
        <member name="F:Zeus.Config.ConfigManager.s_ReaderSettings">
            <summary>
            Settings for the <see cref="T:System.Xml.XmlReader"/> objects.
            </summary>
        </member>
        <member name="F:Zeus.Config.ConfigManager.s_WriterSettings">
            <summary>
            Settings for the <see cref="T:System.Xml.XmlWriter"/> objects.
            </summary>
        </member>
        <member name="F:Zeus.Config.ConfigManager.s_Sources">
            <summary>
            List of the avaialble sources for configuration data.
            </summary>
        </member>
        <member name="M:Zeus.Config.ConfigManager.GetSectionName``1">
            <summary>
            Gets the name of the section associated with the <typeparamref name="T"/> class.
            The section name is the class name, or the name defined by the <see cref="T:System.Xml.Serialization.XmlRootAttribute"/>.
            </summary>
            <typeparam name="T">Type of the class for wich the section name must be retrieved.</typeparam>
            <returns>The name of the section associated with the requested class.</returns>
        </member>
        <member name="M:Zeus.Config.ConfigManager.LoadSection``1">
            <summary>
            Load requested data from configuration file.
            </summary>
            <typeparam name="T">The type of the data that has to be load.</typeparam>
            <returns>A new instance of the <typeparamref name="T"/> class populated with the data from the configuration file if succeed, null otherwise.</returns>
        </member>
        <member name="M:Zeus.Config.ConfigManager.SaveSection``1(``0)">
            <summary>
            Save given data to configuration file.
            </summary>
            <typeparam name="T">The type of the data that has to be saved.</typeparam>
            <param name="sectionData">The data that has to be saved in the configuration file.</param>
        </member>
        <member name="M:Zeus.Config.ConfigManager.AddSource``1(Zeus.Data.DataStore)">
            <summary>
            Add a new source of the specified type to the <see cref="T:Zeus.Config.ConfigManager"/>.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the source that has to be added.</typeparam>
            <param name="settings">The new source settings.</param>
        </member>
        <member name="P:Zeus.Config.ConfigManager.IsLocalSourceReadOnly">
            <summary>
            Gets or sets the readonly flag of the local configuration source.
            </summary>
        </member>
        <member name="T:Zeus.Config.ConfigSettings">
            <summary>
            Contains the settings for the configuration manager.
            </summary>
        </member>
        <member name="F:Zeus.Config.ConfigSettings.m_Sources">
            <summary>
            The list of the avaiavle sources data.
            </summary>
        </member>
        <member name="F:Zeus.Config.ConfigSettings.s_AvaialbleSources">
            <summary>
            A dictionary that associate avaialble source types to its names.
            </summary>
        </member>
        <member name="M:Zeus.Config.ConfigSettings.#ctor">
            <summary>
            Initialize class fields.
            </summary>
        </member>
        <member name="M:Zeus.Config.ConfigSettings.#cctor">
            <summary>
            Initialize class static fields.
            </summary>
        </member>
        <member name="P:Zeus.Config.ConfigSettings.Sources">
            <summary>
            Gets the configured sources data.
            </summary>
        </member>
        <member name="T:Zeus.Config.SectionNameAttribute">
            <summary>
            Attribute that define the config file section name.
            Can only be used on classes.
            </summary>
        </member>
        <member name="M:Zeus.Config.SectionNameAttribute.#ctor(System.String)">
            <summary>
            Create  new instance of the attribute.
            </summary>
            <param name="name">The name of the config section that contains data associated with the class in wich this attribute is used.</param>
        </member>
        <member name="T:Zeus.Config.Sources.IConfigSource">
            <summary>
            Interface that defines properties and method of a configuration source. This interface is meant for internal use only.
            </summary>
        </member>
        <member name="M:Zeus.Config.Sources.IConfigSource.Open">
            <summary>
            Open the config source.
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the configuration data.</returns>
        </member>
        <member name="M:Zeus.Config.Sources.IConfigSource.Close">
            <summary>
            Closes the configuration source.
            </summary>
        </member>
        <member name="M:Zeus.Config.Sources.IConfigSource.Initialize(Zeus.Data.DataStore)">
            <summary>
            Initialize the configuration source.
            </summary>
            <param name="settings">The settings needed by the <see cref="T:Zeus.Config.Sources.IConfigSource"/> to initialize the source.</param>
        </member>
        <member name="P:Zeus.Config.Sources.IConfigSource.IsReadOnly">
            <summary>
            Gets a flag that indicates if the source is readonly or not.
            </summary>
        </member>
        <member name="T:Zeus.Config.Sources.FileSource">
            <summary>
            Gives access to a .odin configuration file.
            </summary>
        </member>
        <member name="F:Zeus.Config.Sources.FileSource.c_FileNameTag">
            <summary>
            The <see cref="T:Zeus.Data.DataStore"/> tag that contains information about the file name.
            </summary>
        </member>
        <member name="F:Zeus.Config.Sources.FileSource.c_CreateIfNotExistsTag">
            <summary>
            The <see cref="T:Zeus.Data.DataStore"/> tag that contains information about file creation option.
            </summary>
        </member>
        <member name="F:Zeus.Config.Sources.FileSource.c_IsReadOnlyTag">
            <summary>
            The <see cref="T:Zeus.Data.DataStore"/> tag that contains information about config source readonly flag.
            </summary>
        </member>
        <member name="M:Zeus.Config.Sources.FileSource.Initialize(Zeus.Data.DataStore)">
            <summary>
            Initialize the configuration source.
            </summary>
            <param name="settings">Config source settings.</param>
        </member>
        <member name="M:Zeus.Config.Sources.FileSource.Open">
            <summary>
            Open the config source.
            </summary>
            <returns>A <see cref="T:System.IO.Stream"/> with the configuration data.</returns>
        </member>
        <member name="M:Zeus.Config.Sources.FileSource.Close">
            <summary>
            Closes the configuration source.
            </summary>
        </member>
        <member name="P:Zeus.Config.Sources.FileSource.IsReadOnly">
            <summary>
            Gets a flag that indicates if the source is readonly or not.
            </summary>
        </member>
        <member name="M:Zeus.Config.Sources.FileSource.#ctor">
            <summary>
            Internal constructor used to avoid creation of class instance outside the current assembly.
            The constructor do nothing, all the action are performed in the <see cref="!:FileSource.Initialize(DataStore, string)"/> method.
            </summary>
        </member>
        <member name="F:Zeus.Config.Sources.FileSource.m_FileName">
            <summary>
            Name of the settings file.
            </summary>
        </member>
        <member name="F:Zeus.Config.Sources.FileSource.m_DataStream">
            <summary>
            <see cref="T:System.IO.Stream"/> linked to the configuration file.
            </summary>
        </member>
        <member name="T:Zeus.Config.XmlWriterExtension">
            <summary>
            Exension methods for <see cref="T:System.Xml.XmlWriter"/> class.
            </summary>
        </member>
        <member name="M:Zeus.Config.XmlWriterExtension.FakeWrite(System.Xml.XmlWriter)">
            <summary>
            Sets the private currentState field of a XmlWellFormedWriter to the internal value State.TopLevel (1).
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> object wich state has to be modified.</param>
        </member>
    </members>
</doc>
